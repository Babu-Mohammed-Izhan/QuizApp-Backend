{"version":3,"sources":["components/StartPage.js","components/Alertbar.js","components/QuizPage.js","components/LeaderBoard.js","App.js","index.js"],"names":["StartPage","handleusername","useState","username","setusername","redirectstart","setredirectstart","to","className","type","value","onChange","e","target","onClick","Alertbar","alertcolor","correct","Alert","variant","QuizPage","handlescore","options","setoptions","score","setScore","number","setNumber","visible","setVisible","ques","setques","redirectboard","setredirectboard","alert","setalert","useEffect","a","axios","get","data","results","randomizeans","getData","question","num","answers","incorrect_answers","correct_answer","sort","Math","random","handleAnswerOptionClick","chosenAns","setTimeout","Navbar","bg","Brand","Row","Card","id","Body","decode","Button","Spinner","animation","role","LeaderBoard","newusername","newscore","scores","setscores","getScores","console","log","b","object","post","response","postScores","Table","bordered","hover","map","floor","App","setscore","path","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14bd405d.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nconst StartPage = ({ handleusername }) => {\r\n\r\n    const [username, setusername] = useState(\"\")\r\n    const [redirectstart, setredirectstart] = useState(false)\r\n\r\n    if (redirectstart) {\r\n        return <Redirect to='/quiz' />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex container align-items-center flex-column justify-content-center start-page\" >\r\n            <div className=\"row top\">\r\n                <h1 className=\"title\">Quizz Me Not</h1>\r\n                <h3 className=\"name\">Enter you name</h3>\r\n            </div>\r\n            <div className=\"row username\">\r\n                <input type=\"text\" value={username} onChange={(e) => setusername(e.target.value)} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <button type=\"button\" className=\"btn btn-dark\" onClick={() => {\r\n                    handleusername(username)\r\n                    setredirectstart(true)\r\n                }}>Start Quiz</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartPage\r\n","import { Alert } from 'react-bootstrap'\r\n\r\nconst Alertbar = ({ alertcolor, correct }) => {\r\n    if (alertcolor === 'success') {\r\n        return (\r\n            <Alert variant={alertcolor}>\r\n                Congratulations its the correct answer!\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    if (alertcolor === 'danger') {\r\n        return (\r\n            <Alert variant={alertcolor}>\r\n                You got the wrong answer, the correct answer is {correct}\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default Alertbar\r\n","import { Row, Button, Card, Spinner, Navbar } from \"react-bootstrap\";\r\nimport { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alertbar from './Alertbar'\r\nimport { decode } from 'html-entities';\r\n\r\n\r\n\r\nconst QuizPage = ({ handlescore }) => {\r\n\r\n    const [options, setoptions] = useState([])\r\n    const [score, setScore] = useState(0);\r\n    const [number, setNumber] = useState(0);\r\n    const [visible, setVisible] = useState(false);\r\n    const [ques, setques] = useState()\r\n    const [redirectboard, setredirectboard] = useState(false)\r\n    const [alert, setalert] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = async () => {\r\n            const data = await axios.get('https://opentdb.com/api.php?amount=10&category=9&difficulty=easy&type=multiple')\r\n            setques(data.data.results)\r\n            randomizeans(data.data.results, 0);\r\n            setVisible(true)\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n\r\n\r\n    const randomizeans = (question, num) => {\r\n        const answers = [...question[num].incorrect_answers, question[num].correct_answer]\r\n        answers.sort(() => .5 - Math.random())\r\n        setoptions(answers)\r\n    }\r\n\r\n\r\n    const handleAnswerOptionClick = e => {\r\n        const chosenAns = e.target.value\r\n        const correct = ques[number].correct_answer\r\n\r\n        //Incrementing the question number and going to the next question\r\n        if (number <= 8) {\r\n\r\n            //Setting the score\r\n            if (chosenAns === correct) {\r\n                setScore(score + 1)\r\n                setalert('success')\r\n            }\r\n\r\n            if (chosenAns !== correct) {\r\n                setalert('danger')\r\n            }\r\n\r\n            setTimeout(() => {\r\n                setalert(null)\r\n                setNumber(number + 1)\r\n                randomizeans(ques, number + 1);\r\n            }, 3000)\r\n        } else {\r\n            handlescore(score)\r\n            setredirectboard(true)\r\n        }\r\n\r\n    };\r\n\r\n    // Redirect to leaderboard\r\n    if (redirectboard) {\r\n        return <Redirect to='/leaderboard' />;\r\n    }\r\n\r\n    return (\r\n        //This is the quiz app page\r\n        <div className=\"container wrapper quiz bg-dark \" >\r\n            {visible ?\r\n                <div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Navbar.Brand>\r\n                            <h1 className=\"nav-title\">Quizz Me Not</h1>\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <div className=\"container d-flex align-items-center justify-content-center flex-column page bg-dark\">\r\n                        <Alertbar alertcolor={alert} correct={ques[number].correct_answer} />\r\n                        <Row>\r\n                            <Card id=\"question\" className=\" w-auto \">\r\n                                <Card.Body>{decode(ques[number].question)}</Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                        <Row id=\"buttons\" >\r\n                            <div className=\"col d-flex justify-content-around\">\r\n                                <Button className=\"options btn-block\" id=\"quiz-button\" variant=\"light\" onClick={handleAnswerOptionClick} value={options[0]}>{decode(options[0])}</Button>\r\n                                <Button className=\"options btn-block\" id=\"quiz-button\" variant=\"light\" onClick={handleAnswerOptionClick} value={options[1]}>{decode(options[1])}</Button>\r\n                            </div>\r\n                        </Row>\r\n                        <Row id=\"buttons\">\r\n                            <div className=\"col d-flex justify-content-around\">\r\n                                <Button className=\"options btn-block\" id=\"quiz-button\" variant=\"light\" onClick={handleAnswerOptionClick} value={options[2]}>{decode(options[2])}</Button>\r\n                                <Button className=\"options btn-block\" id=\"quiz-button\" variant=\"light\" onClick={handleAnswerOptionClick} value={options[3]}>{decode(options[3])}</Button>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                : <div>\r\n                    <div id=\"loading\" className=\"d-flex justify-content-center align-items-center\">\r\n                        <Spinner animation=\"border\" role=\"status\" variant=\"light\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizPage\r\n","import { useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst LeaderBoard = ({ newusername, newscore }) => {\r\n\r\n    const [scores, setscores] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getScores = async () => {\r\n            const scores = await axios.get('api/scores/')\r\n            console.log(scores)\r\n            const data = scores.data\r\n            data.sort((a, b) => b.score - a.score)\r\n            setscores(data)\r\n        }\r\n\r\n        const postScores = async () => {\r\n            const object = {\r\n                username: newusername,\r\n                score: newscore\r\n            }\r\n            const { response } = await axios.post('api/scores/', object)\r\n            console.log(response)\r\n        }\r\n\r\n        postScores();\r\n        getScores();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"leaderboard-wrapper\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\" leaderboard-title d-flex align-items-center justify-content-center\">\r\n                    <h1>LeaderBoard</h1>\r\n                </div>\r\n                <Table bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {scores.map((score) => {\r\n                            return (\r\n                                <tr key={Math.floor(Math.random() * 1000)}>\r\n                                    <td>{score.username}</td>\r\n                                    <td>{score.score}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeaderBoard\r\n","import './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport StartPage from './components/StartPage';\nimport QuizPage from './components/QuizPage';\nimport LeaderBoard from './components/LeaderBoard'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { useState } from 'react';\n\nfunction App() {\n  const [username, setusername] = useState('')\n  const [score, setscore] = useState(0)\n\n  const handleusername = (user) => {\n    setusername(user)\n    console.log(user)\n  }\n\n  const handlescore = async (num) => {\n    setscore(num)\n    console.log(num)\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/quiz\">\n            <QuizPage handlescore={(e) => handlescore(e)} />\n          </Route>\n          <Route path=\"/leaderboard\">\n            <LeaderBoard newusername={username} newscore={score} />\n          </Route>\n          <Route path=\"/\">\n            <StartPage handleusername={(e) => handleusername(e)} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}